[tool.poetry]
name = "synthetic-data"
version = "0.1.0"
description = "Synthetic data generation"
authors = ["Nico Graf <ncograf@gmail.com>"]
readme = "README.md"
packages = [
    {include = "*", from = "src"},
    {include = "*", from = "src/data_source"},
    {include = "*", from = "src/fourier_flows"},
    {include = "*", from = "src/garch"},
    {include = "*", from = "src/outlier"},
    {include = "*", from = "src/statistics"},
    {include = "*", from = "src/stylized_facts"},
    {include = "*", from = "src/time_gan"},
    {include = "*", from = "src/conditional_flow"},
    {include = "*", from = "src/utils"},
    {include = "*", from = "src/visualization"},
    {include = "*", from = "src/wandb_tools"},
    {include = "*.so", from = "boosted/boost_modules", format = "wheel"},
]

[tool.poetry.dependencies]
python = "3.10.4"
yfinance = "0.2.37"
pandas = "^2.2.1"
numpy = "^1.26.4"
scipy = "^1.12.0"
beautifulsoup4 = "^4.12.3"
pytest = "^8.0.2"
matplotlib = "^3.8.3"
click = "^8.1.7"
py-getch = "^1.0.1"
tueplots = "^0.0.13"
scikit-learn = "^1.4.1.post1"
matplotcheck = "^0.1.4"
arch = "^6.3.0"
schema = "^0.7.5"
pyperclip = "^1.8.2"
icecream = "^2.1.3"
statsmodels = "^0.14.1"
arrayfire = "^3.8.0"
powerlaw = "^1.5"
jupyter = "^1.0.0"
seaborn = "^0.13.2"
ruff = "^0.3.7"
copulas = "^0.11.0"
torch = "^2.3.0"
tqdm = "^4.66.2"
wandb = "^0.16.6"
py-cpuinfo = "^9.0.0"
accelerate = "^0.30.0"
pyarrow = "^16.0.0"
pytest-cov = "^5.0.0"


[tool.ruff]
# Exclude commonly ignored directories
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "data"
]

# Black rules
line-length = 88
indent-width = 4

# Assume Python 3.10
target-version = "py310"

extend-include = ["*.ipynb"]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# I001 is for import sorting similar to isort
# D would explicitly require docstring
select = ["E4", "E7", "E9", "F", "I001"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
